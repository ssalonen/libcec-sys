on:
    push:
        branches:
            - master
    pull_request:
        branches:
            - master
name: Continuous Integration

jobs:
    test:
        name: Test Suite ${{ matrix.job.target }} (${{ matrix.job.libcec }})
        runs-on: ${{ matrix.job.os }}
        strategy:
            matrix:
                rust: [stable]
                job:
                    - os: ubuntu-latest
                      target: aarch64-unknown-linux-gnu
                      use-cross: true
                      libcec: vendored-libcec
                    - os: ubuntu-latest
                      target: i686-unknown-linux-gnu
                      use-cross: true
                      libcec: vendored-libcec
                    - os: ubuntu-latest
                      target: arm-unknown-linux-gnueabi
                      use-cross: true
                      libcec: vendored-libcec
                    - os: ubuntu-latest
                      target: armv7-unknown-linux-gnueabihf
                      use-cross: true
                      libcec: vendored-libcec
                    - os: ubuntu-latest
                      target: mips-unknown-linux-gnu
                      use-cross: true
                      libcec: vendored-libcec
                    - os: ubuntu-latest
                      target: mips64-unknown-linux-gnuabi64
                      use-cross: true
                      libcec: vendored-libcec
                    - os: ubuntu-latest
                      target: mips64el-unknown-linux-gnuabi64
                      use-cross: true
                      libcec: vendored-libcec
                    - os: ubuntu-latest
                      target: mipsel-unknown-linux-gnu
                      use-cross: true
                      libcec: vendored-libcec
                    - os: ubuntu-latest
                      target: x86_64-unknown-linux-gnu
                      use-cross: true
                      libcec: vendored-libcec
                    - os: ubuntu-latest
                      target: x86_64-unknown-linux-gnu
                      use-cross: true
                      libcec: libcec4
                    - os: ubuntu-latest
                      target: x86_64-unknown-linux-gnu
                      use-cross: true
                      libcec: libcec6_6.0.2-1ubuntu1_amd64.deb
        steps:
            - name: Checkout repository
              uses: actions/checkout@v2
            - name: Checkout submodules
              shell: bash
              # basically git submodule update --init --recursive but replacing git@github.com with https
              # for anonymous checkout
              run: |
                  git submodule update --init
                  git submodule foreach --recursive '
                  echo "pwd: $(pwd)" ; \
                  if [ -f .gitmodules ]; then \
                      ( sed -i "s/git@github.com:/https:\/\/github.com\//" .gitmodules \
                      && git submodule sync --recursive ) ; \
                  fi ; \
                  git submodule update --init \
                  ;'
            - name: Installing Rust toolchain
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: ${{ matrix.rust }}
                  profile: minimal
                  target: ${{ matrix.job.target }}
                  override: true
            - name: Install libcec (manually downloaded .deb)
              if: !startsWith(matrix.job.libcec, 'vendored') && endsWith(matrix.job.libcec, '.deb')
              run: |
                  sudo apt-get install libp8-platform2
                  TEMP_DOWNLOAD="$(mktemp)" &&
                  wget -O "$TEMP_DOWNLOAD" 'http://se.archive.ubuntu.com/ubuntu/pool/universe/libc/libcec/${{ matrix.job.libcec }}' &&
                  sudo dpkg -i "$TEMP_DOWNLOAD"
                  rm -f "$TEMP_DOWNLOAD"
            - name: Install libcec (apt-get)
              if: !startsWith(matrix.job.libcec, 'vendored') }} && !endsWith(matrix.job.libcec, '.deb')
              run: sudo apt-get install libp8-platform2 ${{ matrix.job.libcec }}
            - name: Cargo test
              uses: actions-rs/cargo@v1
              with:
                  command: test
                  use-cross: ${{ matrix.job.use-cross }}
                  toolchain: ${{ matrix.rust }}
                  args: --target ${{ matrix.job.target }}

    rustfmt:
        name: Rustfmt
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v2
            - name: Checkout submodules
              shell: bash
              # basically git submodule update --init --recursive but replacing git@github.com with https
              # for anonymous checkout
              run: |
                  git submodule update --init
                  git submodule foreach --recursive '
                  echo "pwd: $(pwd)" ; \
                  if [ -f .gitmodules ]; then \
                      ( sed -i "s/git@github.com:/https:\/\/github.com\//" .gitmodules \
                      && git submodule sync --recursive ) ; \
                  fi ; \
                  git submodule update --init \
                  ;'
            - name: Install Rust
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: stable
                  profile: minimal
                  override: true
                  components: rustfmt
            - name: Check formatting
              uses: actions-rs/cargo@v1
              with:
                  command: fmt
                  args: --all -- --check

    clippy:
        name: Clippy
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v2
            - name: Checkout submodules
              shell: bash
              # basically git submodule update --init --recursive but replacing git@github.com with https
              # for anonymous checkout
              run: |
                  git submodule update --init
                  git submodule foreach --recursive '
                  echo "pwd: $(pwd)" ; \
                  if [ -f .gitmodules ]; then \
                      ( sed -i "s/git@github.com:/https:\/\/github.com\//" .gitmodules \
                      && git submodule sync --recursive ) ; \
                  fi ; \
                  git submodule update --init \
                  ;'
            - name: Install Rust
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: stable
                  profile: minimal
                  override: true
                  target: x86_64-unknown-linux-gnu
                  components: clippy
            - name: Clippy Check
              uses: actions-rs/cargo@v1
              with:
                  use-cross: true
                  command: clippy
                  args: -- --target x86_64-unknown-linux-gnu -D warnings
