name: bindgen-unix
description: Generates libcec bindings for nix environments.

inputs:
  target:
    description: The target triple being tested.
    required: true
  libcec_major_version:
    description: Libcec major version to generate bindings for
    required: true

runs:
  using: composite
  steps:
    - name: Installing Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
          toolchain: stable
          profile: default
          override: true

    - name: Setup Rust cache
      uses: Swatinem/rust-cache@v2

    - name: Check if target bindings exist
      id: check_bindings_exist
      shell: bash
      run: |
        if [ -f 'src/lib_abi${{ inputs.libcec_major_version }}_${{ inputs.target }}.rs'  ]; then
          echo 'bindings_exist=false' >> "$GITHUB_OUTPUT"
        else
          echo 'bindings_exist=true' >> "$GITHUB_OUTPUT"
        fi

    - name: Generate missing bindings
      if: ${{ ! steps.check_bindings_exist.outputs.bindings_exist }}
      uses: actions-rs/cargo@v1
      with:
          command: build
          use-cross: ${{ inputs.target != 'x86_64-unknown-linux-gnu' }}
          args: --target ${{ inputs.target }} --package cec_bindgen --bin cec_bindgen
      env:
        MAJOR_VERSION: ${{ inputs.libcec_major_version }}
        DEST_PATH: ../src
        SRC_PATH: .

    - name: Regenerate bindings
      if: ${{ steps.check_bindings_exist.outputs.bindings_exist }}
      uses: actions-rs/cargo@v1
      with:
          command: build
          use-cross: ${{ inputs.target != 'x86_64-unknown-linux-gnu' }}
          args: --target ${{ inputs.target }} --package cec_bindgen --bin cec_bindgen
      env:
        MAJOR_VERSION: ${{ inputs.libcec_major_version }}
        DEST_PATH: ../src
        SRC_PATH: .

    - name: Commit bindings
      if: ${{ steps.check_bindings_exist.outputs.bindings_exist }}
      uses: EndBug/add-and-commit@v9
      with:
        add: src/lib_abi${{ inputs.libcec_major_version }}_${{ inputs.target }}.rs
        message: Update ${{ inputs.target }} libcec${{ inputs.libcec_major_version }} bindings
        pathspec_error_handling: exitImmediately
        pull: --rebase --autostash

